#include "extra.h"
void main()//游戏主函数
{
	player *temp,*head = initialize(5, 5);//初始化一个地图5*5，并设定好路径
	player *position=head;//用于储存玩家最后的位置
	temp = head;
	int e,f,i = 1;//计数变量
	int remember;//用于存储生成的随机数
	int money=10;
	int hp=100;//定义两个主要参数，money hp
	//fun map[5][5];//定义一个用于后台地图控制的二维函数指针数组，一旦玩家的位置和里面包含函数的指针的坐标坐标对应就进行调用
	/*for (e = 0;e <= 4;e++)//通过循环嵌套，先将全部函数指针赋为空值，防止后续程序崩溃
	{
		f = 0;
		for (;f <= 4;f++)//数组的坐标都是0到N-1！！！！！！！！
		{
			map[e][f] = NULL;
		}
	}*/
	temp = head;
	/*for (; i <=10; i++)//在用于后台控制的函数指针数组中写入要进行触发的函数，后续此处可以进一步更改
	{
		map[(temp->x)-1][(temp->y)-1] = addfunction();//将路径点与地图的坐标对应起来，以便根据路径点触发相应功能
		temp = temp->next;
	}*/
	while (1)
	{
		gotoxy(7, 1);
		printf("hp=%d", hp);
		gotoxy(7, 2);
		printf("money=%d", money);//打印初始状态
		remember = suiji(6);//生成0到6的随机数，作为将要前进的步数
		gotoxy(6, 6);
		printf("\rpress enter to let the player go");
		getchar();
		Sleep(1000);
		jump(position, remember);//使玩家移动REMEMBER下
		for (i = 1;i <remember&&position->next!=NULL;i++)//使临时变量position跳转remember个位置，并且当其已经是最后一个的时候跳出循环
			position = position->next;
		/*if (map[(position->x)-1][(position->y)-1] != NULL)//防止调用空指针使程序崩溃
			map[(position->x)-1][(position->y)-1](&hp, &money);*/
		runfunction(&hp, &money);
		gotoxy(7, 1);
		printf("hp=%d ", hp);
		Sleep(300);
		gotoxy(7, 2);
		printf("money=%d ", money);//进行操作后实时输出状态
		Sleep(300);
		if (hp == 0 || money>=200 )
			break;
	}
	Sleep(500);
	system("CLS");
	if (hp==0||money==0)
	{
		printf("YOU LOSE");
	}
	else
	{
		printf("YOU WIN");
	}
}



















































































































































































































































































































































































































































































